package com.kth.csd.client.requestsender;

import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.OptionalDataException;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.net.UnknownHostException;

public class RequestSender {
	
	private static final String DEFAULT_HOST = "172.0.0.1";
	private static final int DEFAULT_PORT = 4444;
	
	public void sendRequest(){
		sendRequest(DEFAULT_HOST, DEFAULT_PORT);
	}

	public void sendRequest(String host, int port){
        System.out.println("Send Request");
        Socket clientSocket = null;

        try {
            clientSocket = new Socket(host, port);
            
            OutputStreamWriter outputStream = new OutputStreamWriter(clientSocket.getOutputStream());
            outputStream.write( "Hello there!" );
            outputStream.flush();
            outputStream.close();
            
            clientSocket.close();
        } catch (UnknownHostException e) {
            System.out.println("Unknown host!");
            e.printStackTrace();
        } catch (IOException e) {
            System.out.println("IO error!");
            e.printStackTrace();
        }

        
        
        
            
        byte[] toServer = message.getBytes();
        out.write(toServer, 0, toServer.length);
        out.flush();

        //Deserialize received object
        Object receivedObject = null;
        GameStatus gameStatus;

        try {
            receivedObject = in.readObject();
        } catch (ClassNotFoundException cnfe) {
            System.out.println(cnfe.toString());
        } catch (OptionalDataException ode) {
            System.out.println(ode.toString());
        }

        if (receivedObject instanceof GameStatus) {
            gameStatus = (GameStatus) receivedObject;
            responseListener.onResponseReceived(gameStatus);
        }

        out.close();
        in.close();
        clientSocket.close();
        
        sendNewRequest = false;

	}
}
